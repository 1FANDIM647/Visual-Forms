<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAU8AAABkCAIAAACJsyXkAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAACxhJREFUeF7tnT9rG0kYh/NBrjryKdRcewmHyYcwKmJwEbC/gRsbg0qTlDkMwtVh
        o+YQBtsgF6ocXAQhgxCoi1HsEF2wQTe7O5J25987M7sreTW/h7eJNDtamTx6Z2fenX01BQCEAWwHIBRg
        OwChANsBCAXYDkAowHYAQgG2AxAKsB2AUIDtAIQCbAcgFGA7AKEA2wEIBdgOQCjAdgBCAbYDEAqwHYBQ
        gO0AhAJsByAUYDsAoQDbAQgF2A5AKMB2AEIBtgMQCrC9NB6Gd3G0R9ft0clO93Cnu71xvv37P9sfH3iT
        l0+P0WI0GnVGLeIVp97ibUBVcLH930/ff3v9zRTvJn3e1ov2Y6q372/fJTF/hcXjv7zpy+XhZOOfv343
        hcb259b0R2368IrHj/r0qcffWj69xtxqHbC9cjjZvpsWTx0f2ryxO89HGbGVsRa2Hyr+Rj9TnqfjR4M3
        WDatOpdaC2yvHC6298nczmL3F2/tSiax62I9bf9Po3oSP1diFWxfQwq3/fX3ozve3gWbxJ77SmEpkLaf
        n2T/QC1RbzFq02fedImQQ/laY3XXGcCP4m33Su9WiX09bX9uSHpL8cTbLhHYvoaUYbt7ereZEYhiLWzv
        XvOWCS/UdnIoD9urh4vtthn49be3n1zGnneTt1IP6lhH21/oSJ60HZft1aMc252m02wTO4u1tJ2apVvR
        tDxsXz/Kst06vdsndhZVsH16vSPonY2Nr0PecEFPuwK3osTOoC7cYXv1KM12y/TukNhZeC/vLRMP22Oe
        Gtnqmlq09rYi1Rmwff0o0XaLShunxM5irW1/YcD29cPJdlc5qYG3W2JnAduXB2xfP0q1nUjvvz5I7Ymw
        tn04uWqO9t7fbr7v/vHnPNg/+3vN+4G3bg/D9tfDnfPtzDzc+fbO15P2ovSdsH1nxNvN6E2f2Ii9Fwd/
        icNftFrpGne+3Bxcnm6dfX7z9zzYPy+ag3Hq+46bcYOts9ODLzed8Zi/rIKYpkvZ3uu1GtEdM/ydiOj2
        mXqj0cqzShd1G/cr/OxEXeftO0xKtt2Q3q1X71NB2z7oMMnThmviff/KyfmH651z0VshNrpJ2Yyj7U/1
        xbW6Lkzr7ePBwdlpynBlnB4MYrHHN1viW5/fROYPhpL4Vrb3WnXzEIDJWXcVM/7x4EcT1OqtnqHzljBA
        iX46EuqGcoHoS6XhB0dUu8qgbNu16d09sZPz/JPj/VvRamNs7t8P+LEm7r5uC8Zq4/yw7Wo7XV2jn5Yf
        fiE9X8TW5WA4uBBeTAf/RZhB2t4j6+0WRFbyfs30rEVfoFfX+B00p2T+3pW+gCnfdmVC9knsRtuH91Yp
        XY73I7Pw7a6oa86QRvKe1TXjzqWoa844yP4lCNvdIfOiw6+HjNJd6jtI7pKnANuJkAtpfRI7C63t93uC
        w06hF75w1Vm4217nDdMUrjob7Tezg/nCbWcYXMmleoL8c0J/h8wxFucA28nIpne/xM5Cbfvk2C+rp2P/
        nneWZnQoiFpIKGbpfgh6CyHZ7jSAt46LDu+eU4bt2gRf1IcJMlp1OzvGqXElcbLdNydn07t3J0rbB023
        a3Vd7An/16nLb+/Ib/vgQBS1iDi7EaYty7Fd6UuRH5Xp3rLjWqMlzufpgO0WMRfVO7GzkG0fjjYlbz0j
        O553mJlzDGfbhTr5chL75zeX4uVMWbZL6b2AMXyaTPdFfwnN0KQiLMv2WSFtnh5k242J/TZaWucNp4Ph
        PTljn0rvw4/Uept3SLZPpz8lw9ORtb2cxM5iebb75V8HSuu+0omdsTzbv/327vFo15DYhQ0nFSHabpqc
        k0bmEcSwf371Tt7HFsdG9/puVlRzZ7Egn0Q+241LaElsXabLZsbDwc1BpuRGHVtfxAV3O00yC949i+X3
        mJQ29MdkFuyt1uKzVhY0dqh2Wo8p1Pa3u5M8Q32ykFawvdMXdZ2HctYtwjx737+KG9kM4xXSToc2c/i5
        bCen4mVpY3gJnSG8bFcKwIznb+tZHEg1Vn8E5a+YhO1+uQysgeqMYm3/9Ox7WR6N8x1tNyTqzeaENxpO
        2Bg+qqLdv7W4wr89jmeqSGn1te70JYCz7aldKClppdF4CuISwMN2/biWlmt2LOGt90dIB9r8BmnRn0a1
        cLKdWoGLbMxRgeNo+9W+4Gr+SGwnjTU+/oFat8tju9lYccFcwDy9J5TWMCg9TAqQyXeWK40fYkyo5o9Q
        Heo5ol+PtB5TuO0ed7bN1ufcbC9imV2K+GqfWnsTN40VcL0rpijbpSU0EWWR/CycbTfnO8uxtrEZoZnP
        se7Cr0tajynBduf0zmtv6E2mS7c9ye2U7fJWUxmIoUEO24260rYbfyxcbacynt3IwGgfJZrpI/SnR51Y
        Gtvi/qpQqO323qZjdtuMxVHpmrwybE9m6WB7zMptz/MR2mOdsjt1BlXDyXZy75q5jfa73CxuiV217bez
        RbsXO5LPabvxcOdZOnPmJaXKb7vPsS6JPYEaYFSKkmy3Tu+pwbmj7XazdNGGFjz29vtJHHfur+IYRDP2
        LHiHM4KcpXO23egiKTs/2twux0eoJCVPSk1tfYQvy3bLCtl0/byr7eZCumQtzY/KrsCZ0rv5l6LYFTja
        q9mx3gMI1wM9VU8gRhmVoTTbrQrvXNtnd8IxVNew0BbY0PhW11jdIZvHdovqmkvlPlwlVdeoZ7EsDlzo
        QzVWikaqK8pucUoE+t+dCuFiO52uM/bSK2rZbW2cbadua99M1ckrGXT60QhfrrG1u9fVr3JWMS4w2+5a
        Ofvm7MKjcta3Tt6rcjalsEXOReVsUZRpOzGHL25Z5267xaU7k1nYdpJdqHdGx5nSOnnYT03U5Yh8tlMD
        cv9Y4l0xWW+K/5yM7EV2X/UEX6ztoo2m9J5ZPI+wsF16IkVRd7xKw/7y7njNaXtpd7yK1/wFZUQFYpIs
        +JPS3dt2Xatb7oZX7QRfsu36S335STI+thNzdQ4hjefLSu+S7Y73t5eV3pdmuyJBlpZ/7b5EcojdSVQ6
        vbvYTpfEyrbrZtqFMX+En+2FLbzLu9OVs1OVVJzjbLvd1btrLMl2jS1F+S50b9Pt4hC31hWkdNuV6V31
        gHereluV7QzfDWezIU/XlTKeL8D2Msbzy7DdNA7OdZNagtw92adwCH0OsH0eStvlpK1slsd2Ru4Mr9l5
        tt0tWnixFM/LdobbtrNMZmJEIOxCmV8+AbpKxXYvDCU+O0wrzoj6kYPt81DbLl7wq58nkdN2xuSq2feb
        tDM/RsItwzOZH4zX/EXZzrDN8EneNhfeutrO/ts7pH/r2S0f472fHsFbZTF/K9g+D43t2fSuM9b3uj3L
        cHLl8sSYTctHRFktp2/vjJK+rk0VddHzZLL8p3t4O4v4uc4mxubl9NODRdmMcXpPGMkTA+taIzkrCzmt
        HxMzx3rDq6RzQ+96c4mLCp/DXj4utufi7tfR7uOH3ccj9YOiCifedjIqnhGzPa+ZH111Zvvb2KN56uNG
        9+Qj93xVjAfNy4ut9APhkqe78bfnjIdjMfg7OVA/9bEeFcXkciN+6qPQMSPp2+Xhcr0s/FUK3noOf7nC
        LM12AMCKge0AhAJsByAUYDsAoQDbAQgF2A5AKMB2AEIBtgMQCrAdgFCA7QCEAmwHIBRgOwChANsBCAXY
        DkAowHYAQgG2AxAKsB2AUIDtAIQCbAcgFGA7AKEA2wEIBdgOQCjAdgBCAbYDEAqwHYBQgO0AhAJsByAU
        YDsAoQDbAQgF2A5AKMB2AEIBtgMQCrAdgFCA7QCEwXT6P/kJmcXjaPtJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAHQSAAB0EgAAAAAAAAAA
        AAB/f3//f39//35+fv9+fn7/f39//39/f/9+fn7/fn5+/35+fv9/f3//f39//35+f/9+fn7/f39//39/
        f/9/f3//f39//4CAf/+Dg4P/goKD/39/f/9/f37/goKB/4ODg/+CgoP/f39//39/f/+CgoH/g4OD/4CA
        gf9/f3//f39//4SDgf9ocXj/Ghoi/zYsHv+BfXj/hYeH/0ZRXf8bGxr/VEg8/4eFg/97gIT/KjNA/xoa
        Gv9qYFL/g4WH/35+ff+GhIH/YW12/wAABP8fEQD/hX53/3iAhv8MFyT/AAAA/xcLA/+AeG3/fIWK/w8a
        K/8AAAD/Y1ZE/4WHif9+fX3/hoOB/2Jud/8BAQv/IxYF/4yFff9NXWv/AAAC/xMTDv8AAAD/YFA//4OL
        j/8UHi7/AQEB/2RYR/+Ehoj/fn19/4aEgf9ibnf/AAAK/yMVA/+FhYD/Gio8/wEAAP9VUkn/AgwZ/ykX
        DP+DhoT/Ex8w/wAAAP9kWEf/hIaJ/359ff+GhIH/Ym53/wAACf8qGwf/Zm5x/wADC/8fEAf/ioZ+/yg7
        TP8CAAD/b2pg/xglN/8AAAD/ZFhH/4SGif9+fX3/hoSB/2Jud/8AAAj/Kx8N/zI8Rf8AAAD/UUIy/46N
        iv9caXT/AAAE/z81Kf8cJzT/AAAA/2RYR/+Ehon/fn19/4aEgf9ibnf/AQAJ/xwYD/8JDxf/DQYB/3lw
        Zf+AgYL/gISG/xQhMf8MCAL/Fhog/wEBAf9kV0b/hIaI/359ff+GhIH/YG12/wAACf8EAgD/AAAA/zws
        Hf+Ih4P/e3x9/4iHhf9IV2X/AAAA/wMDBP8AAAD/Y1VE/4WGif9+fX3/hYOB/2Nud/8KDBX/CgkJ/w4K
        Cv9rYFP/g4WG/319ff+Bf37/dn2C/xQdKP8JCQn/CgoK/2VZSf+Ehoj/fn19/39/f/99fn//eXl5/3l5
        ef96eXn/gICA/39/f/9/f3//f39//4CAgP97fH3/eXl5/3l5ef9+fXz/f39//39/f/9/f3//f39//4GB
        gf+BgYH/gIGB/39/f/9/f3//f39//39/f/9/f3//gICA/4GBgf+BgYH/f4CA/39/f/9/f3//f39//39/
        f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/
        f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/
        f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/
        f/9/f3//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>